{"ast":null,"code":"import * as actions from './types';\n\nconst axios = require('axios').default;\n\nexport const getInfo = data => async dispatch => {\n  let error;\n  const response = await axios({\n    method: `get`,\n    url: `https://restcountries.eu/rest/v2/name/${data}` // baseURL: restAPI,\n\n  }).catch(er => error = er);\n\n  if (error) {\n    dispatch({\n      type: actions.GET_INFO,\n      payload: \"Error\"\n    });\n  } else {\n    dispatch({\n      type: actions.GET_INFO,\n      payload: response\n    });\n  }\n};\nexport const getAllCountries = data => async dispatch => {\n  let error;\n  const response = await axios({\n    method: `get`,\n    url: `https://restcountries.eu/rest/v2/all`\n  }).catch(er => error = er);\n\n  if (error) {\n    dispatch({\n      type: actions.GET_COUNTRIES,\n      payload: \"Error\"\n    });\n  } else {\n    dispatch({\n      type: actions.GET_COUNTRIES,\n      payload: response\n    });\n  }\n};\nexport const getNameCountry = data => dispatch => {\n  dispatch({\n    type: actions.GET_NAME_COUNTRY,\n    payload: data\n  });\n};\nexport const postData = data => dispatch => {\n  dispatch({\n    type: actions.POST_DATA,\n    payload: data\n  });\n};\n\nconst sendResult = result => (console.log(result), {\n  type: actions.GET_RESULT,\n  payload: result\n});\n\nexport const getResult = data => dispatch => {\n  if (data[0]) {\n    if (data[0].name === data[1].name && data[1].name === data[2].name) {\n      if (data[0].name === 'cherry') {\n        return dispatch(sendResult(50));\n      } else if (data[0].name === 'apple') {\n        return dispatch(sendResult(20));\n      } else if (data[0].name === 'banana') {\n        return dispatch(sendResult(15));\n      } else if (data[0].name === 'lemon') {\n        return dispatch(sendResult(3));\n      }\n    } else if (data[0].name === data[1].name) {\n      // console.log(data, 'result back end')\n      if (data[0].name === 'cherry') {\n        return dispatch(sendResult(40));\n      } else if (data[0].name === 'apple') {\n        return dispatch(sendResult(10));\n      } else if (data[0].name === 'banana') {\n        return dispatch(sendResult(5));\n      }\n    } else if (data[1].name === data[2].name) {\n      // console.log(data, 'result back end')\n      if (data[1].name === 'cherry') {\n        return dispatch(sendResult(40));\n      } else if (data[1].name === 'apple') {\n        return dispatch(sendResult(10));\n      } else if (data[1].name === 'banana') {\n        return dispatch(sendResult(5));\n      }\n    } else if (data[0] === data[2]) {\n      if (data[0].name === 'cherry') {\n        return dispatch(sendResult(40));\n      } else if (data[0].name === 'apple') {\n        return dispatch(sendResult(10));\n      } else if (data[0].name === 'banana') {\n        return dispatch(sendResult(5));\n      }\n    } else {\n      dispatch(sendResult(0));\n    }\n  }\n};","map":{"version":3,"sources":["/Users/valentinaronchi/Desktop/dev_test/src/redux/actions/actions.js"],"names":["actions","axios","require","default","getInfo","data","dispatch","error","response","method","url","catch","er","type","GET_INFO","payload","getAllCountries","GET_COUNTRIES","getNameCountry","GET_NAME_COUNTRY","postData","POST_DATA","sendResult","result","console","log","GET_RESULT","getResult","name"],"mappings":"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","sourcesContent":["import * as actions from './types'\nconst axios = require('axios').default;\n\nexport const getInfo = (data) => async (dispatch) => {\n\n    let error\n\n    const response = await axios({\n        method: `get`,\n        url: `https://restcountries.eu/rest/v2/name/${data}`,\n        // baseURL: restAPI,\n    }).catch((er) =>\n        error = er\n    )\n\n    if (error) {\n        dispatch({\n            type: actions.GET_INFO,\n            payload: \"Error\"\n        })\n    } else {\n        dispatch({\n            type: actions.GET_INFO,\n            payload: response\n        })\n    }\n}\n\n\nexport const getAllCountries = (data) => async (dispatch) => {\n    let error\n\n    const response = await axios({\n        method: `get`,\n        url: `https://restcountries.eu/rest/v2/all`,\n    }).catch((er) =>\n        error = er\n    )\n\n    if (error) {\n        dispatch({\n            type: actions.GET_COUNTRIES,\n            payload: \"Error\"\n        })\n    } else {\n        dispatch({\n            type: actions.GET_COUNTRIES,\n            payload: response\n        })\n    }\n}\n\n\nexport const getNameCountry = (data) => (dispatch) => {\n    dispatch({\n        type: actions.GET_NAME_COUNTRY,\n        payload: data\n    })\n}\n\nexport const postData = (data) => (dispatch) => {\n    dispatch({\n        type: actions.POST_DATA,\n        payload: data\n    })\n}\n\nconst sendResult = (result) => (\n    console.log(result),\n    {\n    type: actions.GET_RESULT,\n    payload: result\n})\n\nexport const getResult = (data) => (dispatch) => {\n\n    if (data[0]) {\n        if (data[0].name === data[1].name && data[1].name === data[2].name) {\n            if (data[0].name === 'cherry') {\n                return dispatch(sendResult(50))\n            } else if (data[0].name === 'apple') {\n                return dispatch(sendResult(20))\n            } else if (data[0].name === 'banana') {\n                return dispatch(sendResult(15))\n            } else if (data[0].name === 'lemon') {\n                return dispatch(sendResult(3))\n            }\n        } else if (data[0].name === data[1].name) {\n            // console.log(data, 'result back end')\n            if (data[0].name === 'cherry') {\n                return dispatch(sendResult(40))\n            } else if (data[0].name === 'apple') {\n                return dispatch(sendResult(10))\n            } else if (data[0].name === 'banana') {\n                return dispatch(sendResult(5))\n            }\n        } else if (data[1].name === data[2].name) {\n            // console.log(data, 'result back end')\n            if (data[1].name === 'cherry') {\n                return dispatch(sendResult(40))\n            } else if (data[1].name === 'apple') {\n                return dispatch(sendResult(10))\n            } else if (data[1].name === 'banana') {\n                return dispatch(sendResult(5))\n            }\n\n        } else if (data[0] === data[2]) {\n            if (data[0].name === 'cherry') {\n                return dispatch(sendResult(40))\n            } else if (data[0].name === 'apple') {\n                return dispatch(sendResult(10))\n            } else if (data[0].name === 'banana') {\n                return dispatch(sendResult(5))\n            }\n\n        } else {\n            dispatch(sendResult(0))\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}